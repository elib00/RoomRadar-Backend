// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomRadar_Backend;

#nullable disable

namespace RoomRadar_Backend.Migrations
{
    [DbContext(typeof(BackendDbContext))]
    [Migration("20241210132510_AddedStarInRating")]
    partial class AddedStarInRating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoomRadar_Backend.Models.BoardingHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFeesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllowPets")
                        .HasColumnType("bit");

                    b.Property<string>("AmenitiesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyRate")
                        .HasColumnType("float");

                    b.Property<int>("NumOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBedrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBeds")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RulesJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId");

                    b.ToTable("BoardingHouses");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardingHouseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardingHouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.PendingLandLord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PendingLandLords");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardingHouseId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardingHouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLandLord")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.BoardingHouse", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.User", "LandLord")
                        .WithMany()
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("RoomRadar_Backend.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("BoardingHouseId")
                                .HasColumnType("int");

                            b1.Property<string>("Barangay")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Municipality")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BoardingHouseId");

                            b1.ToTable("BoardingHouses");

                            b1.WithOwner()
                                .HasForeignKey("BoardingHouseId");
                        });

                    b.OwnsOne("RoomRadar_Backend.Models.Location", "Location", b1 =>
                        {
                            b1.Property<int>("BoardingHouseId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("BoardingHouseId");

                            b1.ToTable("BoardingHouses");

                            b1.WithOwner()
                                .HasForeignKey("BoardingHouseId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("LandLord");

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.Favorite", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.BoardingHouse", "BoardingHouse")
                        .WithMany("Favorites")
                        .HasForeignKey("BoardingHouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoomRadar_Backend.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BoardingHouse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.PendingLandLord", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.User", "LandLord")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.Rating", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.BoardingHouse", "BoardingHouse")
                        .WithMany("Ratings")
                        .HasForeignKey("BoardingHouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoomRadar_Backend.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BoardingHouse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.UserAccount", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("RoomRadar_Backend.Models.UserAccount", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.UserProfile", b =>
                {
                    b.HasOne("RoomRadar_Backend.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("RoomRadar_Backend.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.BoardingHouse", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("RoomRadar_Backend.Models.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Favorites");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
